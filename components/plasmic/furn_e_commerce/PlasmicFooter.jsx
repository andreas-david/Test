// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eetRVbLy8gp7SoVBTaw9Ti
// Component: FoSHlSKaK_5
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconLink from "../../IconLink"; // plasmic-import: zsIpI9LvnDtY/component
import { useScreenVariants as useScreenVariantscsw71UGhxUHg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CSW71UGhxUHg/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: eetRVbLy8gp7SoVBTaw9Ti/projectcss
import * as sty from "./PlasmicFooter.module.css"; // plasmic-import: FoSHlSKaK_5/css
import LocationArrowIcon from "./icons/PlasmicIcon__LocationArrow"; // plasmic-import: Iq5JsXU0YTHQ/icon
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: uXxqONJBLajM/icon
import InstagramIcon from "./icons/PlasmicIcon__Instagram"; // plasmic-import: VoFNrJEcsaSR/icon
import LinkedinIcon from "./icons/PlasmicIcon__Linkedin"; // plasmic-import: fNEXE-ejkGHg/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscsw71UGhxUHg()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__foW7S)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__c4Q66)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__mSnWx
            )}
          >
            {"Information"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__eHlrv)}
          >
            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__bv21T
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"About Us"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__w3JW
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Contact Us"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__m84E
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"News"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__rkZl
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Store"}
            </p.PlasmicLink>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__qPx66)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lKvwk
            )}
          >
            {"Collections"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__puSem)}
          >
            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__vo6I6
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Wooden Chair"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__whpp
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Royal Cloth Sofa"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link___2KHkj
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Accent Chair"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__kcqWn
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Bed"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__jM5L
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Hanging Lamp"}
            </p.PlasmicLink>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__jPwww)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eORl
            )}
          >
            {"My Accounts"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__mfKbd)}
          >
            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__nTn2O
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"My Account"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__mn5Ec
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Wishlist"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link___7EXf0
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Community"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__zOFpg
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Order History"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__tHwFv
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"My Cart"}
            </p.PlasmicLink>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___92DdJ)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wgAq
            )}
          >
            {"Newsletter"}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lSsCk
            )}
          >
            {"Subscribe to get latest news, updates, and information"}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__pFMqa)}>
            <input
              data-plasmic-name={"textInput"}
              data-plasmic-override={overrides.textInput ?? overrides.textbox}
              className={classNames(projectcss.input, sty.textInput)}
              placeholder={"Enter Email Here..."}
              size={1}
              type={"text"}
              value={""}
            />

            <button
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              className={classNames(projectcss.button, sty.button)}
            >
              <LocationArrowIcon
                className={classNames(projectcss.all, sty.svg__bedvm)}
                role={"img"}
              />
            </button>
          </div>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__yjs3M)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__upmNb)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__mrwKi)}
            icon={
              <FacebookIcon
                className={classNames(projectcss.all, sty.svg___0Gk6X)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink___1JIig)}
            icon={
              <InstagramIcon
                className={classNames(projectcss.all, sty.svg__n8WH)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink___84JCi)}
            icon={
              <LinkedinIcon
                className={classNames(projectcss.all, sty.svg__mAuYg)}
                role={"img"}
              />
            }
          />
        </p.Stack>

        <div className={classNames(projectcss.all, sty.freeBox__ebzne)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__mUnhW
            )}
          >
            {"© Copyright. "}
          </div>

          <p.PlasmicLink
            className={classNames(
              projectcss.a,
              projectcss.__wab_text,
              sty.link__yBxAq
            )}
            component={Link}
            href={"https://www.plasmic.app/"}
            platform={"nextjs"}
          >
            {"Made by Plasmic. "}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.a,
              projectcss.__wab_text,
              sty.link__wx8Dn
            )}
            component={Link}
            href={"https://www.themesine.com/"}
            platform={"nextjs"}
          >
            {"Inspired by Themesine."}
          </p.PlasmicLink>
        </div>
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "textInput", "textbox", "button"],
  textInput: ["textInput", "textbox"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
